<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ResourcePackDirectory"
    targetNamespace="http://www.MobileHold.cz/GamePack.xsd"
    elementFormDefault="qualified"
    xmlns="http://www.MobileHold.cz/GamePack.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <xs:element name="gamePackDirectory">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="gamePack" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="gamePack" type="gamePackType"/>
    
  <xs:complexType name="gamePackType">
    <!--
    All paths are relative to the position of the gamePack xml file
    
    Example:
    gamePack xml path
    /tmp/gamePacks/gamePack.xml
    
    then thumbnails/thumbnail.png is equal to /tmp/gamePacks/thumbnails/thumbnail.png
    -->
    <xs:sequence>
	    <xs:element name="description" type="xs:string" minOccurs="0"/>
	    <xs:element name="pathToThumbnail" type="xs:string" minOccurs="0"/>
			<xs:element name="levels">
				<xs:complexType>
					<xs:sequence>
            <!--Path to save created level data-->
					  <xs:element name="dataDirPath"/>
					  <xs:element name="level" type="levelType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
      <xs:element name="levelLogicTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="levelLogicType" type="levelLogicTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="playerAITypes">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="playerAIType" type="playerAITypeType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
      <xs:element name="resourceTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="resourceType" type="resourceTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="tileTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultTileType" type="tileTypeType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="tileType" type="tileTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unitTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="unitType" type="unitTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="projectileTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="projectileType" type="projectileTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildingTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="buildingType" type="buildingTypeType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resourceIconTexturePath" type="xs:string"/>
      <xs:element name="tileIconTexturePath" type="xs:string"/>
			<xs:element name="unitIconTexturePath" type="xs:string"/>
      <xs:element name="buildingIconTexturePath" type="xs:string"/>
      <xs:element name="playerIconTexturePath" type="xs:string"/>
    </xs:sequence>
	  <xs:attribute name="name" use="required" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="levelLogicTypeType">
    <xs:sequence>
      <xs:element name="assemblyPath" type="xs:string"/>
      <xs:element name="extension" type="extensionType" minOccurs="0"/>
    </xs:sequence>
    <xs:attributeGroup ref="identifiers"/>
  </xs:complexType>

  <xs:complexType name="resourceTypeType">
    <xs:sequence>
      <xs:element name="iconTextureRectangle" type="intRect"/>
    </xs:sequence>
    <xs:attributeGroup ref="identifiers"/>
  </xs:complexType>

  <xs:complexType name="tileTypeType">
    <xs:sequence>
	    <xs:element name="iconTextureRectangle" type="intRect"/>
      <xs:element name="texturePath" type="xs:string"/>
			<xs:element name="minimapColor" type="color"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:string"/>
    <xs:attribute name="ID" use="required" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="unitTypeType">
	  <xs:complexContent>
		  <xs:extension base="entityWithIconType">
			  <xs:sequence>			
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
  </xs:complexType>

  <xs:complexType name="buildingTypeType">
		<xs:complexContent>
			<xs:extension base="entityWithIconType">
				<xs:sequence>
					<xs:element name="size" type="intVector2"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
  </xs:complexType>

  <xs:complexType name="playerAITypeType">
    <xs:sequence>
      <xs:element name="iconTextureRectangle" type="intRect"/>
      <xs:element name="assemblyPath" type="xs:string"/>
      <xs:element name="extension" type="extensionType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:string"/>
    <xs:attribute name="ID" use="required" type="xs:int"/>
    <xs:attribute name="category" use="required" type="playerTypeCategoryType"/>
  </xs:complexType>

  <xs:complexType name="projectileTypeType">
		<xs:complexContent>
			<xs:extension base="entityType">
				<xs:sequence>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
  </xs:complexType>

  <xs:complexType name="extensionType">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:complexType>

	<xs:complexType name="entityType">
		<xs:sequence>
      <xs:element name="assets" type="assetsType"/>
			<xs:element name="assemblyPath" type="xs:string"/>
			<xs:element name="extension" type="extensionType" minOccurs="0"/>
		</xs:sequence>
		<xs:attributeGroup ref="identifiers"/>
	</xs:complexType>

	<xs:complexType name="entityWithIconType">
		<xs:complexContent>
			<xs:extension base="entityType">
				<xs:sequence>
					<xs:element name="iconTextureRectangle" type="intRect"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:attributeGroup name="identifiers">
		<xs:attribute name="name" use="required" type="xs:string"/>
		<xs:attribute name="ID" use="required" type="xs:int"/>
	</xs:attributeGroup>

  <xs:complexType name="assetsType">
    <xs:choice>
      <xs:element name="path" type="xs:string"/>
      <xs:sequence>
        <xs:element name="scale" type="vector3" minOccurs="0"/>
        <xs:element name="model" type="modelType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="collisionShape" type="collisionShapeType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:choice>
    <xs:attribute name="type" use="required" type="assetsTypeType"/>
  </xs:complexType>

	<xs:complexType name="modelType">
		<xs:sequence>
			<xs:element name="modelPath" type="xs:string"/>
      <xs:element name="material" type="materialType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="type" use="required" type="modelTypeType"/>
	</xs:complexType>

	<xs:complexType name="materialType">
		<xs:choice>
		  <xs:element name="materialListPath" type="xs:string"/>
		  <xs:element name="simpleMaterialPath" type="xs:string"/>
      <xs:sequence>
        <xs:element name="geometryMaterial">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="materialPath" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="index" use="required" type="xs:unsignedInt"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
		</xs:choice>
	</xs:complexType>

  <xs:complexType name="collisionShapeType">
    <xs:choice>
      <xs:element name="box">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="size" type="vector3"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="capsule">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="diameter" type="xs:float"/>
            <xs:element name="height" type="xs:float"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cone">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="diameter" type="xs:float"/>
            <xs:element name="height" type="xs:float"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="convexHull">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="modelPath" type="xs:string"/>
            <xs:element name="lodLevel" type="xs:unsignedInt"/>
            <xs:element name="scale" type="vector3"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cylinder">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="diameter" type="xs:float"/>
            <xs:element name="height" type="xs:float"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sphere">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="diameter" type="xs:float"/>
            <xs:element name="position" type="vector3" minOccurs="0"/>
            <xs:element name="rotation" type="quaternion" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

	<xs:complexType name="levelType">
		<xs:sequence>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="thumbnail" type="xs:string"/>
			<xs:element name="logicTypeName" type="xs:string"/>
			<xs:element name="dataPath" type="xs:string"/>
      <xs:element name="mapSize" type="intVector2"/>
		</xs:sequence>
		<xs:attribute name="name" use="required" type="xs:string"/>
	</xs:complexType>

  <xs:simpleType name="playerTypeCategoryType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="human"/>
      <xs:enumeration value="neutral"/>
      <xs:enumeration value="ai"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="modelTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="animated"/>
      <xs:enumeration value="static"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="assetsTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="xmlprefab"/>
      <xs:enumeration value="binaryprefab"/>
      <xs:enumeration value="items"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="intVector2">
    <xs:attribute name="x" use="optional" type="xs:int" default="0"/>
    <xs:attribute name="y" use="optional" type="xs:int" default="0"/>
  </xs:complexType>

	<xs:complexType name="intRect">
		<xs:attribute name="left" use="required" type="xs:int"/>
		<xs:attribute name="right" use="required" type="xs:int"/>
		<xs:attribute name="top" use="required" type="xs:int"/>
		<xs:attribute name="bottom" use="required" type="xs:int"/>
	</xs:complexType>

  <xs:complexType name="vector2">
    <xs:attribute name="x" use="optional" type="xs:float" default="0"/>
    <xs:attribute name="y" use="optional" type="xs:float" default="0"/>
  </xs:complexType>

	<xs:complexType name="vector3">
		<xs:attribute name="x" use="optional" type="xs:float" default="0"/>
		<xs:attribute name="y" use="optional" type="xs:float" default="0"/>
		<xs:attribute name="z" use="optional" type="xs:float" default="0"/>
	</xs:complexType>

  <xs:complexType name="quaternion">
    <xs:attribute name="xAngle" use="optional" type="xs:float" default="0"/>
    <xs:attribute name="yAngle" use="optional" type="xs:float" default="0"/>
    <xs:attribute name="zAngle" use="optional" type="xs:float" default="0"/>
  </xs:complexType>

	<xs:complexType name="color">
		<xs:attribute name="R" use="required" type="xs:unsignedByte"/>
		<xs:attribute name="G" use="required" type="xs:unsignedByte"/>
		<xs:attribute name="B" use="required" type="xs:unsignedByte"/>
		<xs:attribute name="A" use="optional" type="xs:unsignedByte" default="255"/>
	</xs:complexType>
</xs:schema>
