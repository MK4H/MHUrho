syntax = "proto3";
package MHUrho.Storage;

import "UrhoTypes.proto";
import "PluginStorage.proto";

message StLevel {
	StMap map = 1;
	repeated StUnit units = 2;
	repeated StPlayer players = 3;
	float gameSpeed = 4;
	StPackages packages = 5;
}

message StPackages {
	repeated StPackage packages = 1;
	repeated StEntityType tileTypes = 2;
	repeated StEntityType unitTypes = 3;
	repeated StEntityType buildingTypes = 4;
	repeated StEntityType projectileTypes = 5;
}

message StPackage {
	int32 ID = 1;
	string name = 2;
}

message StTile {
	int32 unitID = 1;
	repeated int32 passingUnitIDs = 2;
	int32 tileTypeID = 3;
	StIntVector2 position = 4;
	float height = 5;
	bool splitDirection = 6;
}

message StBorderTile {
	int32 tileTypeID = 1;
	StIntVector2 position = 2;
	float topLeftHeight = 3;
	float topRightHeight = 4;
	float botLeftHeight = 5;
	float botRightHeight = 6;
	bool splitDirection = 7;
}

message StUnit {
	int32 id = 1;
	int32 typeID = 2;
	StVector3 position = 3;
	int32 playerID = 4;
	int32 targetUnitID = 5;
	PluginData userPlugin = 6;
	map<int32 ,PluginData> defaultComponentData = 7;
}

message StBuilding {
	int32 id = 1;
	int32 typeID = 2;
	StIntVector2 location = 3;
	int32 playerID = 4;
	PluginData userPlugin = 6;
	map<int32 ,PluginData> defaultComponentData = 7;
}

message StPlayer {
	int32 playerID = 1;
	//TODO: Redundant references both ways, could just store it in building/unit and connect it from there
	repeated int32 unitIDs = 2;
	repeated int32 buildingIDs = 3;
	repeated int32 friendPlayerIDs = 4;
}

message StMap {
	StIntVector2 size = 1;
	repeated StTile tiles = 2;
	repeated StBorderTile borderTiles = 3;
}

message StEntityType {
	int32 packageID = 1;
	//Global across all entities of the kind (for example tile types) in this level
	int32 typeID = 2;
	string name = 3;
}


