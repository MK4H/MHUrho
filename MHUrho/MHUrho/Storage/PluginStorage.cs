// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PluginStorage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MHUrho.Storage {

  /// <summary>Holder for reflection information generated from PluginStorage.proto</summary>
  public static partial class PluginStorageReflection {

    #region Descriptor
    /// <summary>File descriptor for PluginStorage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PluginStorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQbHVnaW5TdG9yYWdlLnByb3RvEg5NSFVyaG8uU3RvcmFnZRoPVXJob1R5",
            "cGVzLnByb3RvGhFNSFVyaG9UeXBlcy5wcm90byKMAQoKUGx1Z2luRGF0YRI4",
            "CgdkYXRhTWFwGAEgAygLMicuTUhVcmhvLlN0b3JhZ2UuUGx1Z2luRGF0YS5E",
            "YXRhTWFwRW50cnkaRAoMRGF0YU1hcEVudHJ5EgsKA2tleRgBIAEoCRIjCgV2",
            "YWx1ZRgCIAEoCzIULk1IVXJoby5TdG9yYWdlLkRhdGE6AjgBIsgHCgREYXRh",
            "Eg8KBWZsb2F0GAEgASgCSAASEAoGZG91YmxlGAIgASgBSAASDQoDaW50GAMg",
            "ASgFSAASDgoEbG9uZxgEIAEoA0gAEg4KBHVpbnQYBSABKA1IABIPCgV1bG9u",
            "ZxgGIAEoBEgAEg4KBGJvb2wYByABKAhIABIQCgZzdHJpbmcYCCABKAlIABIT",
            "CglieXRlQXJyYXkYCSABKAxIABIyCgppbnRWZWN0b3IyGAogASgLMhwuTUhV",
            "cmhvLlN0b3JhZ2UuU3RJbnRWZWN0b3IySAASMgoKaW50VmVjdG9yMxgLIAEo",
            "CzIcLk1IVXJoby5TdG9yYWdlLlN0SW50VmVjdG9yM0gAEiwKB3ZlY3RvcjIY",
            "DCABKAsyGS5NSFVyaG8uU3RvcmFnZS5TdFZlY3RvcjJIABIsCgd2ZWN0b3Iz",
            "GA0gASgLMhkuTUhVcmhvLlN0b3JhZ2UuU3RWZWN0b3IzSAASLgoJZmxvYXRM",
            "aXN0GA4gASgLMhkuTUhVcmhvLlN0b3JhZ2UuRmxvYXRMaXN0SAASMAoKZG91",
            "YmxlTGlzdBgPIAEoCzIaLk1IVXJoby5TdG9yYWdlLkRvdWJsZUxpc3RIABIq",
            "CgdpbnRMaXN0GBAgASgLMhcuTUhVcmhvLlN0b3JhZ2UuSW50TGlzdEgAEiwK",
            "CGxvbmdMaXN0GBEgASgLMhguTUhVcmhvLlN0b3JhZ2UuTG9uZ0xpc3RIABIs",
            "Cghib29sTGlzdBgSIAEoCzIYLk1IVXJoby5TdG9yYWdlLkJvb2xMaXN0SAAS",
            "MAoKc3RyaW5nTGlzdBgTIAEoCzIaLk1IVXJoby5TdG9yYWdlLlN0cmluZ0xp",
            "c3RIABI2Cg1ieXRlQXJyYXlMaXN0GBQgASgLMh0uTUhVcmhvLlN0b3JhZ2Uu",
            "Qnl0ZUFycmF5TGlzdEgAEjgKDmludFZlY3RvcjJMaXN0GBUgASgLMh4uTUhV",
            "cmhvLlN0b3JhZ2UuSW50VmVjdG9yMkxpc3RIABI4Cg5pbnRWZWN0b3IzTGlz",
            "dBgWIAEoCzIeLk1IVXJoby5TdG9yYWdlLkludFZlY3RvcjNMaXN0SAASMgoL",
            "dmVjdG9yMkxpc3QYFyABKAsyGy5NSFVyaG8uU3RvcmFnZS5WZWN0b3IyTGlz",
            "dEgAEjIKC3ZlY3RvcjNMaXN0GBggASgLMhsuTUhVcmhvLlN0b3JhZ2UuVmVj",
            "dG9yM0xpc3RIABImCgRwYXRoGBkgASgLMhYuTUhVcmhvLlN0b3JhZ2UuU3RQ",
            "YXRoSABCCgoIY29udGVudHMiGgoJRmxvYXRMaXN0Eg0KBXZhbHVlGAEgAygC",
            "IhsKCkRvdWJsZUxpc3QSDQoFdmFsdWUYASADKAEiGAoHSW50TGlzdBINCgV2",
            "YWx1ZRgBIAMoBSIZCghMb25nTGlzdBINCgV2YWx1ZRgBIAMoAyIZCghCb29s",
            "TGlzdBINCgV2YWx1ZRgBIAMoCCIbCgpTdHJpbmdMaXN0Eg0KBXZhbHVlGAEg",
            "AygJIh4KDUJ5dGVBcnJheUxpc3QSDQoFdmFsdWUYASADKAwiPQoOSW50VmVj",
            "dG9yMkxpc3QSKwoFdmFsdWUYASADKAsyHC5NSFVyaG8uU3RvcmFnZS5TdElu",
            "dFZlY3RvcjIiPQoOSW50VmVjdG9yM0xpc3QSKwoFdmFsdWUYASADKAsyHC5N",
            "SFVyaG8uU3RvcmFnZS5TdEludFZlY3RvcjMiNwoLVmVjdG9yMkxpc3QSKAoF",
            "dmFsdWUYASADKAsyGS5NSFVyaG8uU3RvcmFnZS5TdFZlY3RvcjIiNwoLVmVj",
            "dG9yM0xpc3QSKAoFdmFsdWUYASADKAsyGS5NSFVyaG8uU3RvcmFnZS5TdFZl",
            "Y3RvcjNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MHUrho.Storage.UrhoTypesReflection.Descriptor, global::MHUrho.Storage.MHUrhoTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.PluginData), global::MHUrho.Storage.PluginData.Parser, new[]{ "DataMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.Data), global::MHUrho.Storage.Data.Parser, new[]{ "Float", "Double", "Int", "Long", "Uint", "Ulong", "Bool", "String", "ByteArray", "IntVector2", "IntVector3", "Vector2", "Vector3", "FloatList", "DoubleList", "IntList", "LongList", "BoolList", "StringList", "ByteArrayList", "IntVector2List", "IntVector3List", "Vector2List", "Vector3List", "Path" }, new[]{ "Contents" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.FloatList), global::MHUrho.Storage.FloatList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.DoubleList), global::MHUrho.Storage.DoubleList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.IntList), global::MHUrho.Storage.IntList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.LongList), global::MHUrho.Storage.LongList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.BoolList), global::MHUrho.Storage.BoolList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.StringList), global::MHUrho.Storage.StringList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.ByteArrayList), global::MHUrho.Storage.ByteArrayList.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.IntVector2List), global::MHUrho.Storage.IntVector2List.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.IntVector3List), global::MHUrho.Storage.IntVector3List.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.Vector2List), global::MHUrho.Storage.Vector2List.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MHUrho.Storage.Vector3List), global::MHUrho.Storage.Vector3List.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PluginData : pb::IMessage<PluginData> {
    private static readonly pb::MessageParser<PluginData> _parser = new pb::MessageParser<PluginData>(() => new PluginData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginData(PluginData other) : this() {
      dataMap_ = other.dataMap_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginData Clone() {
      return new PluginData(this);
    }

    /// <summary>Field number for the "dataMap" field.</summary>
    public const int DataMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::MHUrho.Storage.Data>.Codec _map_dataMap_codec
        = new pbc::MapField<string, global::MHUrho.Storage.Data>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::MHUrho.Storage.Data.Parser), 10);
    private readonly pbc::MapField<string, global::MHUrho.Storage.Data> dataMap_ = new pbc::MapField<string, global::MHUrho.Storage.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::MHUrho.Storage.Data> DataMap {
      get { return dataMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DataMap.Equals(other.DataMap)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DataMap.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dataMap_.WriteTo(output, _map_dataMap_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dataMap_.CalculateSize(_map_dataMap_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginData other) {
      if (other == null) {
        return;
      }
      dataMap_.Add(other.dataMap_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            dataMap_.AddEntriesFrom(input, _map_dataMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Data : pb::IMessage<Data> {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data(Data other) : this() {
      switch (other.ContentsCase) {
        case ContentsOneofCase.Float:
          Float = other.Float;
          break;
        case ContentsOneofCase.Double:
          Double = other.Double;
          break;
        case ContentsOneofCase.Int:
          Int = other.Int;
          break;
        case ContentsOneofCase.Long:
          Long = other.Long;
          break;
        case ContentsOneofCase.Uint:
          Uint = other.Uint;
          break;
        case ContentsOneofCase.Ulong:
          Ulong = other.Ulong;
          break;
        case ContentsOneofCase.Bool:
          Bool = other.Bool;
          break;
        case ContentsOneofCase.String:
          String = other.String;
          break;
        case ContentsOneofCase.ByteArray:
          ByteArray = other.ByteArray;
          break;
        case ContentsOneofCase.IntVector2:
          IntVector2 = other.IntVector2.Clone();
          break;
        case ContentsOneofCase.IntVector3:
          IntVector3 = other.IntVector3.Clone();
          break;
        case ContentsOneofCase.Vector2:
          Vector2 = other.Vector2.Clone();
          break;
        case ContentsOneofCase.Vector3:
          Vector3 = other.Vector3.Clone();
          break;
        case ContentsOneofCase.FloatList:
          FloatList = other.FloatList.Clone();
          break;
        case ContentsOneofCase.DoubleList:
          DoubleList = other.DoubleList.Clone();
          break;
        case ContentsOneofCase.IntList:
          IntList = other.IntList.Clone();
          break;
        case ContentsOneofCase.LongList:
          LongList = other.LongList.Clone();
          break;
        case ContentsOneofCase.BoolList:
          BoolList = other.BoolList.Clone();
          break;
        case ContentsOneofCase.StringList:
          StringList = other.StringList.Clone();
          break;
        case ContentsOneofCase.ByteArrayList:
          ByteArrayList = other.ByteArrayList.Clone();
          break;
        case ContentsOneofCase.IntVector2List:
          IntVector2List = other.IntVector2List.Clone();
          break;
        case ContentsOneofCase.IntVector3List:
          IntVector3List = other.IntVector3List.Clone();
          break;
        case ContentsOneofCase.Vector2List:
          Vector2List = other.Vector2List.Clone();
          break;
        case ContentsOneofCase.Vector3List:
          Vector3List = other.Vector3List.Clone();
          break;
        case ContentsOneofCase.Path:
          Path = other.Path.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data Clone() {
      return new Data(this);
    }

    /// <summary>Field number for the "float" field.</summary>
    public const int FloatFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Float {
      get { return contentsCase_ == ContentsOneofCase.Float ? (float) contents_ : 0F; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Float;
      }
    }

    /// <summary>Field number for the "double" field.</summary>
    public const int DoubleFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Double {
      get { return contentsCase_ == ContentsOneofCase.Double ? (double) contents_ : 0D; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Double;
      }
    }

    /// <summary>Field number for the "int" field.</summary>
    public const int IntFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int {
      get { return contentsCase_ == ContentsOneofCase.Int ? (int) contents_ : 0; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Int;
      }
    }

    /// <summary>Field number for the "long" field.</summary>
    public const int LongFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Long {
      get { return contentsCase_ == ContentsOneofCase.Long ? (long) contents_ : 0L; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Long;
      }
    }

    /// <summary>Field number for the "uint" field.</summary>
    public const int UintFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uint {
      get { return contentsCase_ == ContentsOneofCase.Uint ? (uint) contents_ : 0; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Uint;
      }
    }

    /// <summary>Field number for the "ulong" field.</summary>
    public const int UlongFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Ulong {
      get { return contentsCase_ == ContentsOneofCase.Ulong ? (ulong) contents_ : 0UL; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Ulong;
      }
    }

    /// <summary>Field number for the "bool" field.</summary>
    public const int BoolFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bool {
      get { return contentsCase_ == ContentsOneofCase.Bool ? (bool) contents_ : false; }
      set {
        contents_ = value;
        contentsCase_ = ContentsOneofCase.Bool;
      }
    }

    /// <summary>Field number for the "string" field.</summary>
    public const int StringFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String {
      get { return contentsCase_ == ContentsOneofCase.String ? (string) contents_ : ""; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentsCase_ = ContentsOneofCase.String;
      }
    }

    /// <summary>Field number for the "byteArray" field.</summary>
    public const int ByteArrayFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ByteArray {
      get { return contentsCase_ == ContentsOneofCase.ByteArray ? (pb::ByteString) contents_ : pb::ByteString.Empty; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentsCase_ = ContentsOneofCase.ByteArray;
      }
    }

    /// <summary>Field number for the "intVector2" field.</summary>
    public const int IntVector2FieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StIntVector2 IntVector2 {
      get { return contentsCase_ == ContentsOneofCase.IntVector2 ? (global::MHUrho.Storage.StIntVector2) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.IntVector2;
      }
    }

    /// <summary>Field number for the "intVector3" field.</summary>
    public const int IntVector3FieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StIntVector3 IntVector3 {
      get { return contentsCase_ == ContentsOneofCase.IntVector3 ? (global::MHUrho.Storage.StIntVector3) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.IntVector3;
      }
    }

    /// <summary>Field number for the "vector2" field.</summary>
    public const int Vector2FieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StVector2 Vector2 {
      get { return contentsCase_ == ContentsOneofCase.Vector2 ? (global::MHUrho.Storage.StVector2) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.Vector2;
      }
    }

    /// <summary>Field number for the "vector3" field.</summary>
    public const int Vector3FieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StVector3 Vector3 {
      get { return contentsCase_ == ContentsOneofCase.Vector3 ? (global::MHUrho.Storage.StVector3) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.Vector3;
      }
    }

    /// <summary>Field number for the "floatList" field.</summary>
    public const int FloatListFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.FloatList FloatList {
      get { return contentsCase_ == ContentsOneofCase.FloatList ? (global::MHUrho.Storage.FloatList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.FloatList;
      }
    }

    /// <summary>Field number for the "doubleList" field.</summary>
    public const int DoubleListFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.DoubleList DoubleList {
      get { return contentsCase_ == ContentsOneofCase.DoubleList ? (global::MHUrho.Storage.DoubleList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.DoubleList;
      }
    }

    /// <summary>Field number for the "intList" field.</summary>
    public const int IntListFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.IntList IntList {
      get { return contentsCase_ == ContentsOneofCase.IntList ? (global::MHUrho.Storage.IntList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.IntList;
      }
    }

    /// <summary>Field number for the "longList" field.</summary>
    public const int LongListFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.LongList LongList {
      get { return contentsCase_ == ContentsOneofCase.LongList ? (global::MHUrho.Storage.LongList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.LongList;
      }
    }

    /// <summary>Field number for the "boolList" field.</summary>
    public const int BoolListFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.BoolList BoolList {
      get { return contentsCase_ == ContentsOneofCase.BoolList ? (global::MHUrho.Storage.BoolList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.BoolList;
      }
    }

    /// <summary>Field number for the "stringList" field.</summary>
    public const int StringListFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StringList StringList {
      get { return contentsCase_ == ContentsOneofCase.StringList ? (global::MHUrho.Storage.StringList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.StringList;
      }
    }

    /// <summary>Field number for the "byteArrayList" field.</summary>
    public const int ByteArrayListFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.ByteArrayList ByteArrayList {
      get { return contentsCase_ == ContentsOneofCase.ByteArrayList ? (global::MHUrho.Storage.ByteArrayList) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.ByteArrayList;
      }
    }

    /// <summary>Field number for the "intVector2List" field.</summary>
    public const int IntVector2ListFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.IntVector2List IntVector2List {
      get { return contentsCase_ == ContentsOneofCase.IntVector2List ? (global::MHUrho.Storage.IntVector2List) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.IntVector2List;
      }
    }

    /// <summary>Field number for the "intVector3List" field.</summary>
    public const int IntVector3ListFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.IntVector3List IntVector3List {
      get { return contentsCase_ == ContentsOneofCase.IntVector3List ? (global::MHUrho.Storage.IntVector3List) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.IntVector3List;
      }
    }

    /// <summary>Field number for the "vector2List" field.</summary>
    public const int Vector2ListFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.Vector2List Vector2List {
      get { return contentsCase_ == ContentsOneofCase.Vector2List ? (global::MHUrho.Storage.Vector2List) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.Vector2List;
      }
    }

    /// <summary>Field number for the "vector3List" field.</summary>
    public const int Vector3ListFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.Vector3List Vector3List {
      get { return contentsCase_ == ContentsOneofCase.Vector3List ? (global::MHUrho.Storage.Vector3List) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.Vector3List;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MHUrho.Storage.StPath Path {
      get { return contentsCase_ == ContentsOneofCase.Path ? (global::MHUrho.Storage.StPath) contents_ : null; }
      set {
        contents_ = value;
        contentsCase_ = value == null ? ContentsOneofCase.None : ContentsOneofCase.Path;
      }
    }

    private object contents_;
    /// <summary>Enum of possible cases for the "contents" oneof.</summary>
    public enum ContentsOneofCase {
      None = 0,
      Float = 1,
      Double = 2,
      Int = 3,
      Long = 4,
      Uint = 5,
      Ulong = 6,
      Bool = 7,
      String = 8,
      ByteArray = 9,
      IntVector2 = 10,
      IntVector3 = 11,
      Vector2 = 12,
      Vector3 = 13,
      FloatList = 14,
      DoubleList = 15,
      IntList = 16,
      LongList = 17,
      BoolList = 18,
      StringList = 19,
      ByteArrayList = 20,
      IntVector2List = 21,
      IntVector3List = 22,
      Vector2List = 23,
      Vector3List = 24,
      Path = 25,
    }
    private ContentsOneofCase contentsCase_ = ContentsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentsOneofCase ContentsCase {
      get { return contentsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContents() {
      contentsCase_ = ContentsOneofCase.None;
      contents_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Float != other.Float) return false;
      if (Double != other.Double) return false;
      if (Int != other.Int) return false;
      if (Long != other.Long) return false;
      if (Uint != other.Uint) return false;
      if (Ulong != other.Ulong) return false;
      if (Bool != other.Bool) return false;
      if (String != other.String) return false;
      if (ByteArray != other.ByteArray) return false;
      if (!object.Equals(IntVector2, other.IntVector2)) return false;
      if (!object.Equals(IntVector3, other.IntVector3)) return false;
      if (!object.Equals(Vector2, other.Vector2)) return false;
      if (!object.Equals(Vector3, other.Vector3)) return false;
      if (!object.Equals(FloatList, other.FloatList)) return false;
      if (!object.Equals(DoubleList, other.DoubleList)) return false;
      if (!object.Equals(IntList, other.IntList)) return false;
      if (!object.Equals(LongList, other.LongList)) return false;
      if (!object.Equals(BoolList, other.BoolList)) return false;
      if (!object.Equals(StringList, other.StringList)) return false;
      if (!object.Equals(ByteArrayList, other.ByteArrayList)) return false;
      if (!object.Equals(IntVector2List, other.IntVector2List)) return false;
      if (!object.Equals(IntVector3List, other.IntVector3List)) return false;
      if (!object.Equals(Vector2List, other.Vector2List)) return false;
      if (!object.Equals(Vector3List, other.Vector3List)) return false;
      if (!object.Equals(Path, other.Path)) return false;
      if (ContentsCase != other.ContentsCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentsCase_ == ContentsOneofCase.Float) hash ^= Float.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Double) hash ^= Double.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Int) hash ^= Int.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Long) hash ^= Long.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Uint) hash ^= Uint.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Ulong) hash ^= Ulong.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Bool) hash ^= Bool.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.String) hash ^= String.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.ByteArray) hash ^= ByteArray.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.IntVector2) hash ^= IntVector2.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.IntVector3) hash ^= IntVector3.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Vector2) hash ^= Vector2.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Vector3) hash ^= Vector3.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.FloatList) hash ^= FloatList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.DoubleList) hash ^= DoubleList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.IntList) hash ^= IntList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.LongList) hash ^= LongList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.BoolList) hash ^= BoolList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.StringList) hash ^= StringList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.ByteArrayList) hash ^= ByteArrayList.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.IntVector2List) hash ^= IntVector2List.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.IntVector3List) hash ^= IntVector3List.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Vector2List) hash ^= Vector2List.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Vector3List) hash ^= Vector3List.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Path) hash ^= Path.GetHashCode();
      hash ^= (int) contentsCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contentsCase_ == ContentsOneofCase.Float) {
        output.WriteRawTag(13);
        output.WriteFloat(Float);
      }
      if (contentsCase_ == ContentsOneofCase.Double) {
        output.WriteRawTag(17);
        output.WriteDouble(Double);
      }
      if (contentsCase_ == ContentsOneofCase.Int) {
        output.WriteRawTag(24);
        output.WriteInt32(Int);
      }
      if (contentsCase_ == ContentsOneofCase.Long) {
        output.WriteRawTag(32);
        output.WriteInt64(Long);
      }
      if (contentsCase_ == ContentsOneofCase.Uint) {
        output.WriteRawTag(40);
        output.WriteUInt32(Uint);
      }
      if (contentsCase_ == ContentsOneofCase.Ulong) {
        output.WriteRawTag(48);
        output.WriteUInt64(Ulong);
      }
      if (contentsCase_ == ContentsOneofCase.Bool) {
        output.WriteRawTag(56);
        output.WriteBool(Bool);
      }
      if (contentsCase_ == ContentsOneofCase.String) {
        output.WriteRawTag(66);
        output.WriteString(String);
      }
      if (contentsCase_ == ContentsOneofCase.ByteArray) {
        output.WriteRawTag(74);
        output.WriteBytes(ByteArray);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector2) {
        output.WriteRawTag(82);
        output.WriteMessage(IntVector2);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector3) {
        output.WriteRawTag(90);
        output.WriteMessage(IntVector3);
      }
      if (contentsCase_ == ContentsOneofCase.Vector2) {
        output.WriteRawTag(98);
        output.WriteMessage(Vector2);
      }
      if (contentsCase_ == ContentsOneofCase.Vector3) {
        output.WriteRawTag(106);
        output.WriteMessage(Vector3);
      }
      if (contentsCase_ == ContentsOneofCase.FloatList) {
        output.WriteRawTag(114);
        output.WriteMessage(FloatList);
      }
      if (contentsCase_ == ContentsOneofCase.DoubleList) {
        output.WriteRawTag(122);
        output.WriteMessage(DoubleList);
      }
      if (contentsCase_ == ContentsOneofCase.IntList) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(IntList);
      }
      if (contentsCase_ == ContentsOneofCase.LongList) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LongList);
      }
      if (contentsCase_ == ContentsOneofCase.BoolList) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BoolList);
      }
      if (contentsCase_ == ContentsOneofCase.StringList) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(StringList);
      }
      if (contentsCase_ == ContentsOneofCase.ByteArrayList) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ByteArrayList);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector2List) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(IntVector2List);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector3List) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(IntVector3List);
      }
      if (contentsCase_ == ContentsOneofCase.Vector2List) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Vector2List);
      }
      if (contentsCase_ == ContentsOneofCase.Vector3List) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Vector3List);
      }
      if (contentsCase_ == ContentsOneofCase.Path) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Path);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentsCase_ == ContentsOneofCase.Float) {
        size += 1 + 4;
      }
      if (contentsCase_ == ContentsOneofCase.Double) {
        size += 1 + 8;
      }
      if (contentsCase_ == ContentsOneofCase.Int) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int);
      }
      if (contentsCase_ == ContentsOneofCase.Long) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Long);
      }
      if (contentsCase_ == ContentsOneofCase.Uint) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uint);
      }
      if (contentsCase_ == ContentsOneofCase.Ulong) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ulong);
      }
      if (contentsCase_ == ContentsOneofCase.Bool) {
        size += 1 + 1;
      }
      if (contentsCase_ == ContentsOneofCase.String) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      if (contentsCase_ == ContentsOneofCase.ByteArray) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ByteArray);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntVector2);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntVector3);
      }
      if (contentsCase_ == ContentsOneofCase.Vector2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector2);
      }
      if (contentsCase_ == ContentsOneofCase.Vector3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector3);
      }
      if (contentsCase_ == ContentsOneofCase.FloatList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FloatList);
      }
      if (contentsCase_ == ContentsOneofCase.DoubleList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoubleList);
      }
      if (contentsCase_ == ContentsOneofCase.IntList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntList);
      }
      if (contentsCase_ == ContentsOneofCase.LongList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LongList);
      }
      if (contentsCase_ == ContentsOneofCase.BoolList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BoolList);
      }
      if (contentsCase_ == ContentsOneofCase.StringList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StringList);
      }
      if (contentsCase_ == ContentsOneofCase.ByteArrayList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ByteArrayList);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector2List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntVector2List);
      }
      if (contentsCase_ == ContentsOneofCase.IntVector3List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntVector3List);
      }
      if (contentsCase_ == ContentsOneofCase.Vector2List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vector2List);
      }
      if (contentsCase_ == ContentsOneofCase.Vector3List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vector3List);
      }
      if (contentsCase_ == ContentsOneofCase.Path) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Path);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      switch (other.ContentsCase) {
        case ContentsOneofCase.Float:
          Float = other.Float;
          break;
        case ContentsOneofCase.Double:
          Double = other.Double;
          break;
        case ContentsOneofCase.Int:
          Int = other.Int;
          break;
        case ContentsOneofCase.Long:
          Long = other.Long;
          break;
        case ContentsOneofCase.Uint:
          Uint = other.Uint;
          break;
        case ContentsOneofCase.Ulong:
          Ulong = other.Ulong;
          break;
        case ContentsOneofCase.Bool:
          Bool = other.Bool;
          break;
        case ContentsOneofCase.String:
          String = other.String;
          break;
        case ContentsOneofCase.ByteArray:
          ByteArray = other.ByteArray;
          break;
        case ContentsOneofCase.IntVector2:
          if (IntVector2 == null) {
            IntVector2 = new global::MHUrho.Storage.StIntVector2();
          }
          IntVector2.MergeFrom(other.IntVector2);
          break;
        case ContentsOneofCase.IntVector3:
          if (IntVector3 == null) {
            IntVector3 = new global::MHUrho.Storage.StIntVector3();
          }
          IntVector3.MergeFrom(other.IntVector3);
          break;
        case ContentsOneofCase.Vector2:
          if (Vector2 == null) {
            Vector2 = new global::MHUrho.Storage.StVector2();
          }
          Vector2.MergeFrom(other.Vector2);
          break;
        case ContentsOneofCase.Vector3:
          if (Vector3 == null) {
            Vector3 = new global::MHUrho.Storage.StVector3();
          }
          Vector3.MergeFrom(other.Vector3);
          break;
        case ContentsOneofCase.FloatList:
          if (FloatList == null) {
            FloatList = new global::MHUrho.Storage.FloatList();
          }
          FloatList.MergeFrom(other.FloatList);
          break;
        case ContentsOneofCase.DoubleList:
          if (DoubleList == null) {
            DoubleList = new global::MHUrho.Storage.DoubleList();
          }
          DoubleList.MergeFrom(other.DoubleList);
          break;
        case ContentsOneofCase.IntList:
          if (IntList == null) {
            IntList = new global::MHUrho.Storage.IntList();
          }
          IntList.MergeFrom(other.IntList);
          break;
        case ContentsOneofCase.LongList:
          if (LongList == null) {
            LongList = new global::MHUrho.Storage.LongList();
          }
          LongList.MergeFrom(other.LongList);
          break;
        case ContentsOneofCase.BoolList:
          if (BoolList == null) {
            BoolList = new global::MHUrho.Storage.BoolList();
          }
          BoolList.MergeFrom(other.BoolList);
          break;
        case ContentsOneofCase.StringList:
          if (StringList == null) {
            StringList = new global::MHUrho.Storage.StringList();
          }
          StringList.MergeFrom(other.StringList);
          break;
        case ContentsOneofCase.ByteArrayList:
          if (ByteArrayList == null) {
            ByteArrayList = new global::MHUrho.Storage.ByteArrayList();
          }
          ByteArrayList.MergeFrom(other.ByteArrayList);
          break;
        case ContentsOneofCase.IntVector2List:
          if (IntVector2List == null) {
            IntVector2List = new global::MHUrho.Storage.IntVector2List();
          }
          IntVector2List.MergeFrom(other.IntVector2List);
          break;
        case ContentsOneofCase.IntVector3List:
          if (IntVector3List == null) {
            IntVector3List = new global::MHUrho.Storage.IntVector3List();
          }
          IntVector3List.MergeFrom(other.IntVector3List);
          break;
        case ContentsOneofCase.Vector2List:
          if (Vector2List == null) {
            Vector2List = new global::MHUrho.Storage.Vector2List();
          }
          Vector2List.MergeFrom(other.Vector2List);
          break;
        case ContentsOneofCase.Vector3List:
          if (Vector3List == null) {
            Vector3List = new global::MHUrho.Storage.Vector3List();
          }
          Vector3List.MergeFrom(other.Vector3List);
          break;
        case ContentsOneofCase.Path:
          if (Path == null) {
            Path = new global::MHUrho.Storage.StPath();
          }
          Path.MergeFrom(other.Path);
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Float = input.ReadFloat();
            break;
          }
          case 17: {
            Double = input.ReadDouble();
            break;
          }
          case 24: {
            Int = input.ReadInt32();
            break;
          }
          case 32: {
            Long = input.ReadInt64();
            break;
          }
          case 40: {
            Uint = input.ReadUInt32();
            break;
          }
          case 48: {
            Ulong = input.ReadUInt64();
            break;
          }
          case 56: {
            Bool = input.ReadBool();
            break;
          }
          case 66: {
            String = input.ReadString();
            break;
          }
          case 74: {
            ByteArray = input.ReadBytes();
            break;
          }
          case 82: {
            global::MHUrho.Storage.StIntVector2 subBuilder = new global::MHUrho.Storage.StIntVector2();
            if (contentsCase_ == ContentsOneofCase.IntVector2) {
              subBuilder.MergeFrom(IntVector2);
            }
            input.ReadMessage(subBuilder);
            IntVector2 = subBuilder;
            break;
          }
          case 90: {
            global::MHUrho.Storage.StIntVector3 subBuilder = new global::MHUrho.Storage.StIntVector3();
            if (contentsCase_ == ContentsOneofCase.IntVector3) {
              subBuilder.MergeFrom(IntVector3);
            }
            input.ReadMessage(subBuilder);
            IntVector3 = subBuilder;
            break;
          }
          case 98: {
            global::MHUrho.Storage.StVector2 subBuilder = new global::MHUrho.Storage.StVector2();
            if (contentsCase_ == ContentsOneofCase.Vector2) {
              subBuilder.MergeFrom(Vector2);
            }
            input.ReadMessage(subBuilder);
            Vector2 = subBuilder;
            break;
          }
          case 106: {
            global::MHUrho.Storage.StVector3 subBuilder = new global::MHUrho.Storage.StVector3();
            if (contentsCase_ == ContentsOneofCase.Vector3) {
              subBuilder.MergeFrom(Vector3);
            }
            input.ReadMessage(subBuilder);
            Vector3 = subBuilder;
            break;
          }
          case 114: {
            global::MHUrho.Storage.FloatList subBuilder = new global::MHUrho.Storage.FloatList();
            if (contentsCase_ == ContentsOneofCase.FloatList) {
              subBuilder.MergeFrom(FloatList);
            }
            input.ReadMessage(subBuilder);
            FloatList = subBuilder;
            break;
          }
          case 122: {
            global::MHUrho.Storage.DoubleList subBuilder = new global::MHUrho.Storage.DoubleList();
            if (contentsCase_ == ContentsOneofCase.DoubleList) {
              subBuilder.MergeFrom(DoubleList);
            }
            input.ReadMessage(subBuilder);
            DoubleList = subBuilder;
            break;
          }
          case 130: {
            global::MHUrho.Storage.IntList subBuilder = new global::MHUrho.Storage.IntList();
            if (contentsCase_ == ContentsOneofCase.IntList) {
              subBuilder.MergeFrom(IntList);
            }
            input.ReadMessage(subBuilder);
            IntList = subBuilder;
            break;
          }
          case 138: {
            global::MHUrho.Storage.LongList subBuilder = new global::MHUrho.Storage.LongList();
            if (contentsCase_ == ContentsOneofCase.LongList) {
              subBuilder.MergeFrom(LongList);
            }
            input.ReadMessage(subBuilder);
            LongList = subBuilder;
            break;
          }
          case 146: {
            global::MHUrho.Storage.BoolList subBuilder = new global::MHUrho.Storage.BoolList();
            if (contentsCase_ == ContentsOneofCase.BoolList) {
              subBuilder.MergeFrom(BoolList);
            }
            input.ReadMessage(subBuilder);
            BoolList = subBuilder;
            break;
          }
          case 154: {
            global::MHUrho.Storage.StringList subBuilder = new global::MHUrho.Storage.StringList();
            if (contentsCase_ == ContentsOneofCase.StringList) {
              subBuilder.MergeFrom(StringList);
            }
            input.ReadMessage(subBuilder);
            StringList = subBuilder;
            break;
          }
          case 162: {
            global::MHUrho.Storage.ByteArrayList subBuilder = new global::MHUrho.Storage.ByteArrayList();
            if (contentsCase_ == ContentsOneofCase.ByteArrayList) {
              subBuilder.MergeFrom(ByteArrayList);
            }
            input.ReadMessage(subBuilder);
            ByteArrayList = subBuilder;
            break;
          }
          case 170: {
            global::MHUrho.Storage.IntVector2List subBuilder = new global::MHUrho.Storage.IntVector2List();
            if (contentsCase_ == ContentsOneofCase.IntVector2List) {
              subBuilder.MergeFrom(IntVector2List);
            }
            input.ReadMessage(subBuilder);
            IntVector2List = subBuilder;
            break;
          }
          case 178: {
            global::MHUrho.Storage.IntVector3List subBuilder = new global::MHUrho.Storage.IntVector3List();
            if (contentsCase_ == ContentsOneofCase.IntVector3List) {
              subBuilder.MergeFrom(IntVector3List);
            }
            input.ReadMessage(subBuilder);
            IntVector3List = subBuilder;
            break;
          }
          case 186: {
            global::MHUrho.Storage.Vector2List subBuilder = new global::MHUrho.Storage.Vector2List();
            if (contentsCase_ == ContentsOneofCase.Vector2List) {
              subBuilder.MergeFrom(Vector2List);
            }
            input.ReadMessage(subBuilder);
            Vector2List = subBuilder;
            break;
          }
          case 194: {
            global::MHUrho.Storage.Vector3List subBuilder = new global::MHUrho.Storage.Vector3List();
            if (contentsCase_ == ContentsOneofCase.Vector3List) {
              subBuilder.MergeFrom(Vector3List);
            }
            input.ReadMessage(subBuilder);
            Vector3List = subBuilder;
            break;
          }
          case 202: {
            global::MHUrho.Storage.StPath subBuilder = new global::MHUrho.Storage.StPath();
            if (contentsCase_ == ContentsOneofCase.Path) {
              subBuilder.MergeFrom(Path);
            }
            input.ReadMessage(subBuilder);
            Path = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class FloatList : pb::IMessage<FloatList> {
    private static readonly pb::MessageParser<FloatList> _parser = new pb::MessageParser<FloatList>(() => new FloatList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FloatList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatList(FloatList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatList Clone() {
      return new FloatList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_value_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> value_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FloatList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FloatList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FloatList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 13: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoubleList : pb::IMessage<DoubleList> {
    private static readonly pb::MessageParser<DoubleList> _parser = new pb::MessageParser<DoubleList>(() => new DoubleList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoubleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleList(DoubleList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleList Clone() {
      return new DoubleList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_value_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> value_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoubleList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoubleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoubleList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 9: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IntList : pb::IMessage<IntList> {
    private static readonly pb::MessageParser<IntList> _parser = new pb::MessageParser<IntList>(() => new IntList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList(IntList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList Clone() {
      return new IntList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_value_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> value_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LongList : pb::IMessage<LongList> {
    private static readonly pb::MessageParser<LongList> _parser = new pb::MessageParser<LongList>(() => new LongList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LongList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList(LongList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList Clone() {
      return new LongList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LongList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LongList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LongList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolList : pb::IMessage<BoolList> {
    private static readonly pb::MessageParser<BoolList> _parser = new pb::MessageParser<BoolList>(() => new BoolList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolList(BoolList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolList Clone() {
      return new BoolList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<bool> _repeated_value_codec
        = pb::FieldCodec.ForBool(10);
    private readonly pbc::RepeatedField<bool> value_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringList : pb::IMessage<StringList> {
    private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList(StringList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList Clone() {
      return new StringList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_value_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ByteArrayList : pb::IMessage<ByteArrayList> {
    private static readonly pb::MessageParser<ByteArrayList> _parser = new pb::MessageParser<ByteArrayList>(() => new ByteArrayList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ByteArrayList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteArrayList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteArrayList(ByteArrayList other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteArrayList Clone() {
      return new ByteArrayList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_value_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> value_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ByteArrayList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ByteArrayList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ByteArrayList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IntVector2List : pb::IMessage<IntVector2List> {
    private static readonly pb::MessageParser<IntVector2List> _parser = new pb::MessageParser<IntVector2List>(() => new IntVector2List());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntVector2List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector2List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector2List(IntVector2List other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector2List Clone() {
      return new IntVector2List(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MHUrho.Storage.StIntVector2> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::MHUrho.Storage.StIntVector2.Parser);
    private readonly pbc::RepeatedField<global::MHUrho.Storage.StIntVector2> value_ = new pbc::RepeatedField<global::MHUrho.Storage.StIntVector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MHUrho.Storage.StIntVector2> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntVector2List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntVector2List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntVector2List other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IntVector3List : pb::IMessage<IntVector3List> {
    private static readonly pb::MessageParser<IntVector3List> _parser = new pb::MessageParser<IntVector3List>(() => new IntVector3List());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntVector3List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector3List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector3List(IntVector3List other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntVector3List Clone() {
      return new IntVector3List(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MHUrho.Storage.StIntVector3> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::MHUrho.Storage.StIntVector3.Parser);
    private readonly pbc::RepeatedField<global::MHUrho.Storage.StIntVector3> value_ = new pbc::RepeatedField<global::MHUrho.Storage.StIntVector3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MHUrho.Storage.StIntVector3> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntVector3List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntVector3List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntVector3List other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector2List : pb::IMessage<Vector2List> {
    private static readonly pb::MessageParser<Vector2List> _parser = new pb::MessageParser<Vector2List>(() => new Vector2List());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2List(Vector2List other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2List Clone() {
      return new Vector2List(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MHUrho.Storage.StVector2> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::MHUrho.Storage.StVector2.Parser);
    private readonly pbc::RepeatedField<global::MHUrho.Storage.StVector2> value_ = new pbc::RepeatedField<global::MHUrho.Storage.StVector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MHUrho.Storage.StVector2> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2List other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector3List : pb::IMessage<Vector3List> {
    private static readonly pb::MessageParser<Vector3List> _parser = new pb::MessageParser<Vector3List>(() => new Vector3List());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MHUrho.Storage.PluginStorageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3List(Vector3List other) : this() {
      value_ = other.value_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3List Clone() {
      return new Vector3List(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MHUrho.Storage.StVector3> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::MHUrho.Storage.StVector3.Parser);
    private readonly pbc::RepeatedField<global::MHUrho.Storage.StVector3> value_ = new pbc::RepeatedField<global::MHUrho.Storage.StVector3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MHUrho.Storage.StVector3> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3List other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
